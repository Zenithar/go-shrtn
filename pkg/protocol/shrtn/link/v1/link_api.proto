// Apache 2.0 Licence
//
// Copyright 2019 Thibault NORMAND
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package shrtn.link.v1;

option csharp_namespace = "Shrtn.Link.V1";
option go_package = "linkv1";
option java_multiple_files = true;
option java_outer_classname = "LinkApiProto";
option java_package = "org.zenithar.shrtn.link.v1";
option objc_class_prefix = "SLX";
option php_namespace = "Shrtn\\Link\\V1";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "shrtn/link/v1/link.proto";

// LinkApi is the link management service.
service LinkAPI {
  // Create a shortened url entry.
  rpc Create(CreateRequest) returns (CreateResponse);
  // Resolve a shortened url entry.
  rpc Resolve(ResolveRequest) returns (ResolveResponse);
  // Delete a shortened url entry.
  rpc Delete(DeleteRequest) returns (DeleteResponse);
}

// -----------------------------------------------------------------------------

message CreateRequest {
  string url = 1 [(gogoproto.jsontag) = "url"];
  string description = 2 [(gogoproto.jsontag) = "description"];
}

message CreateResponse {
  Link link = 1 [(gogoproto.jsontag) = "link"];
}

message ResolveRequest {
  string hash = 1 [(gogoproto.jsontag) = "hash"];
}

message ResolveResponse {
  Link link = 1 [(gogoproto.jsontag) = "link"];
}

message DeleteRequest {
  string hash = 1 [(gogoproto.jsontag) = "hash"];
}

message DeleteResponse {}
